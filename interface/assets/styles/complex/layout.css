/*

    Complex layout CSS that isn't necessary for the first print

*/

:root {
    --sectionsbarafter-top: calc(var(--sectionsbaritem-size) / 4);
    --sectionsbarafter-left: -2px;
    --sectionsbarafter-width: 6px;
    --sectionsbarafter-height: calc(var(--sectionsbaritem-size) / 2);
    --sectionsbarafter-bottom: none;
}

@media all and (max-width: 840px) {
     :root {
        --sectionsbarafter-top: none;
        --sectionsbarafter-left: 30%;
        --sectionsbarafter-width: 40%;
        --sectionsbarafter-height: 6px;
        --sectionsbarafter-bottom: -2px;
    }
}

.layout--sectionsbar-item.state--selected,
.layout--sectionsbar-item:hover,
.layout--sectionsbar-item:active {
    opacity: 1;
    position: relative;
}

.layout--sectionsbar-item.state--selected {
    pointer-events: none;
}

.layout--sectionsbar-item.state--selected:after {
    content: "";
    position: absolute;
    display: block;
    top: var(--sectionsbarafter-top);
    left: var(--sectionsbarafter-left);
    width: var(--sectionsbarafter-width);
    height: var(--sectionsbarafter-height);
    bottom: var(--sectionsbarafter-bottom);
    background-color: var(--colours-primary1);
    border-radius: 100px;
}

.layout--sectionsbar-item.state--selected .sectionsbar--item-icon {
    fill: var(--colours-primary1);
    filter: drop-shadow(0px -2px 0px var(--colours-primary2)) drop-shadow(0px -1px 0px var(--colours-primary2));
    margin-top: 16px;
}

.layout--sectionsbar-item.state--selected .sectionsbar--item-title {
    opacity: 0;
}

.layout--sectionsbar-item.state--selected {
    background-color: var(--topbar-backgroundhover);
}

@media all and (max-width: 840px) {
    .layout--topbar {
        will-change: border, background;
    }
    .layout--topbar .layout--topbar-search::placeholder {
        will-change: color, opacity;
    }
    .layout--pagecontent {
        will-change: margin, height;
    }
    .component--scrollbar {
        will-change: top;
    }
    .layout--topbar .layout--topbar-search {
        will-change: background, box-shadow;
    }
    [data-using-search="false"][data-floating-search="true"] .layout--topbar[data-allow-float="true"] {
        background-color: transparent;
        border: none;
    }
    [data-using-search="false"][data-floating-search="true"] .layout--topbar[data-allow-float="true"] .layout--topbar-search::placeholder {
        color: var(--text-colour);
        opacity: 0.9;
    }
    [data-using-search="false"][data-floating-search="true"] .layout--pagecontent {
        margin-top: calc(-1 * var(--topbar-height));
        height: calc(var(--pagecontent-height) + var(--topbar-height));
    }
    [data-floating-search="true"] .component--scrollbar {
        top: 0px;
    }
    [data-using-search="false"][data-floating-search="true"] .layout--topbar[data-allow-float="true"] .layout--topbar-search {
        background-color: var(--topbarsearchfloat-background);
        box-shadow: 0 1px 8px var(--topbarsearchfloat-shadow);
    }
}


/* I'm bored, LOL */


/*
[data-bored="true"]:root:after {
    content: "";
    position: fixed;
    top: -20px;
    bottom: -20px;
    right: -20px;
    left: -20px;
    z-index: 99999;
    pointer-events: none;
    opacity: 1.7;
    animation: an .09s infinite;
}

[data-bored="true"] .dot {
    background-color: blue;
    position: fixed;
    border-radius: 50%;
    z-index: 999;
    pointer-events: none;
    animation: ann 0.4s infinite;
}

@keyframes an {
    from {
        -webkit-backdrop-filter: blur(2px) grayscale(0.6) saturate(18) sepia(0.2) brightness(1.25);
        backdrop-filter: blur(2px) grayscale(0.6) saturate(18) sepia(0.2) brightness(1.25);
    }
    to {
        -webkit-backdrop-filter: blur(8px) grayscale(0.7) saturate(20) sepia(0.2) brightness(1.3);
        backdrop-filter: blur(8px) grayscale(0.7) saturate(20) sepia(0.2) brightness(1.3);
    }
}

@keyframes ann {
    from {
        filter: hue-rotate(0deg);
    }
    to {
        filter: hue-rotate(360deg);
    }
}
*/